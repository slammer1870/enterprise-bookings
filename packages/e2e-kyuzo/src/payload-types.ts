/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones =
  | 'Pacific/Midway'
  | 'Pacific/Niue'
  | 'Pacific/Honolulu'
  | 'Pacific/Rarotonga'
  | 'America/Anchorage'
  | 'Pacific/Gambier'
  | 'America/Los_Angeles'
  | 'America/Tijuana'
  | 'America/Denver'
  | 'America/Phoenix'
  | 'America/Chicago'
  | 'America/Guatemala'
  | 'America/New_York'
  | 'America/Bogota'
  | 'America/Caracas'
  | 'America/Santiago'
  | 'America/Buenos_Aires'
  | 'America/Sao_Paulo'
  | 'Atlantic/South_Georgia'
  | 'Atlantic/Azores'
  | 'Atlantic/Cape_Verde'
  | 'Europe/London'
  | 'Europe/Berlin'
  | 'Africa/Lagos'
  | 'Europe/Athens'
  | 'Africa/Cairo'
  | 'Europe/Moscow'
  | 'Asia/Riyadh'
  | 'Asia/Dubai'
  | 'Asia/Baku'
  | 'Asia/Karachi'
  | 'Asia/Tashkent'
  | 'Asia/Calcutta'
  | 'Asia/Dhaka'
  | 'Asia/Almaty'
  | 'Asia/Jakarta'
  | 'Asia/Bangkok'
  | 'Asia/Shanghai'
  | 'Asia/Singapore'
  | 'Asia/Tokyo'
  | 'Asia/Seoul'
  | 'Australia/Brisbane'
  | 'Australia/Sydney'
  | 'Pacific/Guam'
  | 'Pacific/Noumea'
  | 'Pacific/Auckland'
  | 'Pacific/Fiji';

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  blocks: {};
  collections: {
    media: Media;
    pages: Page;
    posts: Post;
    forms: Form;
    'form-submissions': FormSubmission;
    lessons: Lesson;
    'class-options': ClassOption;
    bookings: Booking;
    transactions: Transaction;
    users: User;
    subscriptions: Subscription;
    plans: Plan;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {
    lessons: {
      bookings: 'bookings';
    };
    users: {
      lessons: 'lessons';
      userSubscription: 'subscriptions';
    };
  };
  collectionsSelect: {
    media: MediaSelect<false> | MediaSelect<true>;
    pages: PagesSelect<false> | PagesSelect<true>;
    posts: PostsSelect<false> | PostsSelect<true>;
    forms: FormsSelect<false> | FormsSelect<true>;
    'form-submissions': FormSubmissionsSelect<false> | FormSubmissionsSelect<true>;
    lessons: LessonsSelect<false> | LessonsSelect<true>;
    'class-options': ClassOptionsSelect<false> | ClassOptionsSelect<true>;
    bookings: BookingsSelect<false> | BookingsSelect<true>;
    transactions: TransactionsSelect<false> | TransactionsSelect<true>;
    users: UsersSelect<false> | UsersSelect<true>;
    subscriptions: SubscriptionsSelect<false> | SubscriptionsSelect<true>;
    plans: PlansSelect<false> | PlansSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: number;
  };
  globals: {
    navbar: Navbar;
    footer: Footer;
    scheduler: Scheduler;
  };
  globalsSelect: {
    navbar: NavbarSelect<false> | NavbarSelect<true>;
    footer: FooterSelect<false> | FooterSelect<true>;
    scheduler: SchedulerSelect<false> | SchedulerSelect<true>;
  };
  locale: null;
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: unknown;
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: number;
  alt: string;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages".
 */
export interface Page {
  id: number;
  title: string;
  slug: string;
  layout?:
    | (
        | {
            heading: string;
            subheading: string;
            backgroundImage: number | Media;
            cta1_text: string;
            cta1_link: string;
            cta2_text: string;
            cta2_link: string;
            formTitle: string;
            formDescription: string;
            form: number | Form;
            id?: string | null;
            blockName?: string | null;
            blockType: 'hero';
          }
        | ScheduleBlock
        | {
            form: number | Form;
            enableIntro?: boolean | null;
            introContent?: {
              root: {
                type: string;
                children: {
                  type: string;
                  version: number;
                  [k: string]: unknown;
                }[];
                direction: ('ltr' | 'rtl') | null;
                format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                indent: number;
                version: number;
              };
              [k: string]: unknown;
            } | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'form-block';
          }
        | {
            heading: string;
            content: {
              root: {
                type: string;
                children: {
                  type: string;
                  version: number;
                  [k: string]: unknown;
                }[];
                direction: ('ltr' | 'rtl') | null;
                format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                indent: number;
                version: number;
              };
              [k: string]: unknown;
            };
            image: number | Media;
            id?: string | null;
            blockName?: string | null;
            blockType: 'about';
          }
      )[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "forms".
 */
export interface Form {
  id: number;
  title: string;
  fields?:
    | (
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            defaultValue?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'checkbox';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'country';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'email';
          }
        | {
            message?: {
              root: {
                type: string;
                children: {
                  type: string;
                  version: number;
                  [k: string]: unknown;
                }[];
                direction: ('ltr' | 'rtl') | null;
                format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                indent: number;
                version: number;
              };
              [k: string]: unknown;
            } | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'message';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'number';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: string | null;
            placeholder?: string | null;
            options?:
              | {
                  label: string;
                  value: string;
                  id?: string | null;
                }[]
              | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'select';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'state';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: string | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'text';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: string | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'textarea';
          }
      )[]
    | null;
  submitButtonLabel?: string | null;
  /**
   * Choose whether to display an on-page message or redirect to a different page after they submit the form.
   */
  confirmationType?: ('message' | 'redirect') | null;
  confirmationMessage?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  redirect?: {
    url: string;
  };
  /**
   * Send custom emails when the form submits. Use comma separated lists to send the same email to multiple recipients. To reference a value from this form, wrap that field's name with double curly brackets, i.e. {{firstName}}. You can use a wildcard {{*}} to output all data and {{*:table}} to format it as an HTML table in the email.
   */
  emails?:
    | {
        emailTo?: string | null;
        cc?: string | null;
        bcc?: string | null;
        replyTo?: string | null;
        emailFrom?: string | null;
        subject: string;
        /**
         * Enter the message that should be sent in this email.
         */
        message?: {
          root: {
            type: string;
            children: {
              type: string;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ('ltr' | 'rtl') | null;
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
            indent: number;
            version: number;
          };
          [k: string]: unknown;
        } | null;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ScheduleBlock".
 */
export interface ScheduleBlock {
  id?: string | null;
  blockName?: string | null;
  blockType: 'schedule';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "posts".
 */
export interface Post {
  id: number;
  title: string;
  excerpt: string;
  heroImage?: (number | null) | Media;
  content: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  publishedAt?: string | null;
  slug: string;
  form?:
    | {
        form: number | Form;
        enableIntro?: boolean | null;
        introContent?: {
          root: {
            type: string;
            children: {
              type: string;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ('ltr' | 'rtl') | null;
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
            indent: number;
            version: number;
          };
          [k: string]: unknown;
        } | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'form-block';
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "form-submissions".
 */
export interface FormSubmission {
  id: number;
  form: number | Form;
  submissionData?:
    | {
        field: string;
        value: string;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "lessons".
 */
export interface Lesson {
  id: number;
  date: string;
  startTime: string;
  endTime: string;
  /**
   * The time in minutes before the lesson will be closed for new bookings.
   */
  lockOutTime: number;
  location?: string | null;
  instructor?: (number | null) | User;
  classOption: number | ClassOption;
  /**
   * The number of places remaining
   */
  remainingCapacity?: number | null;
  bookings?: {
    docs?: (number | Booking)[];
    hasNextPage?: boolean;
    totalDocs?: number;
  };
  /**
   * Status of the lesson
   */
  bookingStatus?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: number;
  image?: (number | null) | Media;
  lessons?: {
    docs?: (number | Lesson)[];
    hasNextPage?: boolean;
    totalDocs?: number;
  };
  parent?: (number | null) | User;
  name: string;
  roles?: ('customer' | 'admin')[] | null;
  stripeCustomerId?: string | null;
  userSubscription?: {
    docs?: (number | Subscription)[];
    hasNextPage?: boolean;
    totalDocs?: number;
  };
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "subscriptions".
 */
export interface Subscription {
  id: number;
  user: number | User;
  plan: number | Plan;
  status: 'incomplete' | 'incomplete_expired' | 'trialing' | 'active' | 'past_due' | 'canceled' | 'unpaid' | 'paused';
  startDate?: string | null;
  endDate?: string | null;
  cancelAt?: string | null;
  stripeSubscriptionId?: string | null;
  /**
   * Skip syncing to Stripe
   */
  skipSync?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "plans".
 */
export interface Plan {
  id: number;
  name: string;
  /**
   * Features that are included in this plan
   */
  features?:
    | {
        feature?: string | null;
        id?: string | null;
      }[]
    | null;
  /**
   * Sessions included in this plan (if applicable)
   */
  sessionsInformation?: {
    sessions?: number | null;
    intervalCount?: number | null;
    interval?: ('day' | 'week' | 'month' | 'quarter' | 'year') | null;
  };
  stripeProductId?: string | null;
  /**
   * Price information for the plan
   */
  priceInformation?: {
    /**
     * Price of the plan
     */
    price?: number | null;
    /**
     * Number of intervals per period
     */
    intervalCount?: number | null;
    /**
     * How often the price is charged
     */
    interval?: ('day' | 'week' | 'month' | 'year') | null;
  };
  priceJSON?: string | null;
  /**
   * Status of the plan
   */
  status: 'active' | 'inactive';
  /**
   * Skip syncing to Stripe
   */
  skipSync?: boolean | null;
  /**
   * Is this a membership for adults, family or children?
   */
  type: 'adult' | 'family' | 'child';
  /**
   * The number of children who are subscribing to the plan
   */
  quantity?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "class-options".
 */
export interface ClassOption {
  id: number;
  name: string;
  /**
   * How many people can book this class option?
   */
  places: number;
  description: string;
  /**
   * Is this a class for adults or children?
   */
  type: 'adult' | 'child';
  paymentMethods?: {
    allowedPlans?: (number | Plan)[] | null;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "bookings".
 */
export interface Booking {
  id: number;
  user: number | User;
  lesson: number | Lesson;
  status: 'pending' | 'confirmed' | 'cancelled' | 'waiting';
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "transactions".
 */
export interface Transaction {
  id: number;
  amount: number;
  currency: 'EUR' | 'USD';
  status: 'pending' | 'completed' | 'failed';
  paymentMethod: 'cash' | 'card';
  createdBy?: (number | null) | User;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: number;
  document?:
    | ({
        relationTo: 'media';
        value: number | Media;
      } | null)
    | ({
        relationTo: 'pages';
        value: number | Page;
      } | null)
    | ({
        relationTo: 'posts';
        value: number | Post;
      } | null)
    | ({
        relationTo: 'forms';
        value: number | Form;
      } | null)
    | ({
        relationTo: 'form-submissions';
        value: number | FormSubmission;
      } | null)
    | ({
        relationTo: 'lessons';
        value: number | Lesson;
      } | null)
    | ({
        relationTo: 'class-options';
        value: number | ClassOption;
      } | null)
    | ({
        relationTo: 'bookings';
        value: number | Booking;
      } | null)
    | ({
        relationTo: 'transactions';
        value: number | Transaction;
      } | null)
    | ({
        relationTo: 'users';
        value: number | User;
      } | null)
    | ({
        relationTo: 'subscriptions';
        value: number | Subscription;
      } | null)
    | ({
        relationTo: 'plans';
        value: number | Plan;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: number;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: number;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  alt?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages_select".
 */
export interface PagesSelect<T extends boolean = true> {
  title?: T;
  slug?: T;
  layout?:
    | T
    | {
        hero?:
          | T
          | {
              heading?: T;
              subheading?: T;
              backgroundImage?: T;
              cta1_text?: T;
              cta1_link?: T;
              cta2_text?: T;
              cta2_link?: T;
              formTitle?: T;
              formDescription?: T;
              form?: T;
              id?: T;
              blockName?: T;
            };
        schedule?: T | ScheduleBlockSelect<T>;
        'form-block'?:
          | T
          | {
              form?: T;
              enableIntro?: T;
              introContent?: T;
              id?: T;
              blockName?: T;
            };
        about?:
          | T
          | {
              heading?: T;
              content?: T;
              image?: T;
              id?: T;
              blockName?: T;
            };
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ScheduleBlock_select".
 */
export interface ScheduleBlockSelect<T extends boolean = true> {
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "posts_select".
 */
export interface PostsSelect<T extends boolean = true> {
  title?: T;
  excerpt?: T;
  heroImage?: T;
  content?: T;
  publishedAt?: T;
  slug?: T;
  form?:
    | T
    | {
        'form-block'?:
          | T
          | {
              form?: T;
              enableIntro?: T;
              introContent?: T;
              id?: T;
              blockName?: T;
            };
      };
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "forms_select".
 */
export interface FormsSelect<T extends boolean = true> {
  title?: T;
  fields?:
    | T
    | {
        checkbox?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              required?: T;
              defaultValue?: T;
              id?: T;
              blockName?: T;
            };
        country?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        email?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        message?:
          | T
          | {
              message?: T;
              id?: T;
              blockName?: T;
            };
        number?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        select?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              placeholder?: T;
              options?:
                | T
                | {
                    label?: T;
                    value?: T;
                    id?: T;
                  };
              required?: T;
              id?: T;
              blockName?: T;
            };
        state?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        text?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        textarea?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
      };
  submitButtonLabel?: T;
  confirmationType?: T;
  confirmationMessage?: T;
  redirect?:
    | T
    | {
        url?: T;
      };
  emails?:
    | T
    | {
        emailTo?: T;
        cc?: T;
        bcc?: T;
        replyTo?: T;
        emailFrom?: T;
        subject?: T;
        message?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "form-submissions_select".
 */
export interface FormSubmissionsSelect<T extends boolean = true> {
  form?: T;
  submissionData?:
    | T
    | {
        field?: T;
        value?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "lessons_select".
 */
export interface LessonsSelect<T extends boolean = true> {
  date?: T;
  startTime?: T;
  endTime?: T;
  lockOutTime?: T;
  location?: T;
  instructor?: T;
  classOption?: T;
  remainingCapacity?: T;
  bookings?: T;
  bookingStatus?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "class-options_select".
 */
export interface ClassOptionsSelect<T extends boolean = true> {
  name?: T;
  places?: T;
  description?: T;
  type?: T;
  paymentMethods?:
    | T
    | {
        allowedPlans?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "bookings_select".
 */
export interface BookingsSelect<T extends boolean = true> {
  user?: T;
  lesson?: T;
  status?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "transactions_select".
 */
export interface TransactionsSelect<T extends boolean = true> {
  amount?: T;
  currency?: T;
  status?: T;
  paymentMethod?: T;
  createdBy?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  image?: T;
  lessons?: T;
  parent?: T;
  name?: T;
  roles?: T;
  stripeCustomerId?: T;
  userSubscription?: T;
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "subscriptions_select".
 */
export interface SubscriptionsSelect<T extends boolean = true> {
  user?: T;
  plan?: T;
  status?: T;
  startDate?: T;
  endDate?: T;
  cancelAt?: T;
  stripeSubscriptionId?: T;
  skipSync?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "plans_select".
 */
export interface PlansSelect<T extends boolean = true> {
  name?: T;
  features?:
    | T
    | {
        feature?: T;
        id?: T;
      };
  sessionsInformation?:
    | T
    | {
        sessions?: T;
        intervalCount?: T;
        interval?: T;
      };
  stripeProductId?: T;
  priceInformation?:
    | T
    | {
        price?: T;
        intervalCount?: T;
        interval?: T;
      };
  priceJSON?: T;
  status?: T;
  skipSync?: T;
  type?: T;
  quantity?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "navbar".
 */
export interface Navbar {
  id: number;
  logo: string;
  navigationItems: {
    label: string;
    link: string;
    isExternal?: boolean | null;
    id?: string | null;
  }[];
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "footer".
 */
export interface Footer {
  id: number;
  logo: string;
  navigationItems: {
    label: string;
    link: string;
    isExternal?: boolean | null;
    id?: string | null;
  }[];
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * Create recurring lessons across your weekly schedule
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "scheduler".
 */
export interface Scheduler {
  id: number;
  /**
   * When this schedule becomes active
   */
  startDate?: string | null;
  /**
   * When this schedule stops generating lessons
   */
  endDate?: string | null;
  /**
   * Minutes before start time when booking closes (can be overridden per slot)
   */
  lockOutTime?: number | null;
  /**
   * Default class type to use when creating lessons (can be overridden per slot)
   */
  defaultClassOption: number | ClassOption;
  /**
   * Set up your recurring lessons for each day of the week
   */
  schedule?: {
    monday?: {
      isActive?: boolean | null;
      slots?:
        | {
            startTime: string;
            endTime: string;
            /**
             * Overrides the default class option
             */
            classOption?: (number | null) | ClassOption;
            location?: string | null;
            instructor?: (number | null) | User;
            /**
             * Overrides the default lock out time
             */
            lockOutTime?: number | null;
            notes?: string | null;
            /**
             * Dates to skip when generating lessons
             */
            skipDates?:
              | {
                  date?: string | null;
                  id?: string | null;
                }[]
              | null;
            id?: string | null;
          }[]
        | null;
    };
    tuesday?: {
      isActive?: boolean | null;
      slots?:
        | {
            startTime: string;
            endTime: string;
            /**
             * Overrides the default class option
             */
            classOption?: (number | null) | ClassOption;
            location?: string | null;
            instructor?: (number | null) | User;
            /**
             * Overrides the default lock out time
             */
            lockOutTime?: number | null;
            notes?: string | null;
            /**
             * Dates to skip when generating lessons
             */
            skipDates?:
              | {
                  date?: string | null;
                  id?: string | null;
                }[]
              | null;
            id?: string | null;
          }[]
        | null;
    };
    wednesday?: {
      isActive?: boolean | null;
      slots?:
        | {
            startTime: string;
            endTime: string;
            /**
             * Overrides the default class option
             */
            classOption?: (number | null) | ClassOption;
            location?: string | null;
            instructor?: (number | null) | User;
            /**
             * Overrides the default lock out time
             */
            lockOutTime?: number | null;
            notes?: string | null;
            /**
             * Dates to skip when generating lessons
             */
            skipDates?:
              | {
                  date?: string | null;
                  id?: string | null;
                }[]
              | null;
            id?: string | null;
          }[]
        | null;
    };
    thursday?: {
      isActive?: boolean | null;
      slots?:
        | {
            startTime: string;
            endTime: string;
            /**
             * Overrides the default class option
             */
            classOption?: (number | null) | ClassOption;
            location?: string | null;
            instructor?: (number | null) | User;
            /**
             * Overrides the default lock out time
             */
            lockOutTime?: number | null;
            notes?: string | null;
            /**
             * Dates to skip when generating lessons
             */
            skipDates?:
              | {
                  date?: string | null;
                  id?: string | null;
                }[]
              | null;
            id?: string | null;
          }[]
        | null;
    };
    friday?: {
      isActive?: boolean | null;
      slots?:
        | {
            startTime: string;
            endTime: string;
            /**
             * Overrides the default class option
             */
            classOption?: (number | null) | ClassOption;
            location?: string | null;
            instructor?: (number | null) | User;
            /**
             * Overrides the default lock out time
             */
            lockOutTime?: number | null;
            notes?: string | null;
            /**
             * Dates to skip when generating lessons
             */
            skipDates?:
              | {
                  date?: string | null;
                  id?: string | null;
                }[]
              | null;
            id?: string | null;
          }[]
        | null;
    };
    saturday?: {
      isActive?: boolean | null;
      slots?:
        | {
            startTime: string;
            endTime: string;
            /**
             * Overrides the default class option
             */
            classOption?: (number | null) | ClassOption;
            location?: string | null;
            instructor?: (number | null) | User;
            /**
             * Overrides the default lock out time
             */
            lockOutTime?: number | null;
            notes?: string | null;
            /**
             * Dates to skip when generating lessons
             */
            skipDates?:
              | {
                  date?: string | null;
                  id?: string | null;
                }[]
              | null;
            id?: string | null;
          }[]
        | null;
    };
    sunday?: {
      isActive?: boolean | null;
      slots?:
        | {
            startTime: string;
            endTime: string;
            /**
             * Overrides the default class option
             */
            classOption?: (number | null) | ClassOption;
            location?: string | null;
            instructor?: (number | null) | User;
            /**
             * Overrides the default lock out time
             */
            lockOutTime?: number | null;
            notes?: string | null;
            /**
             * Dates to skip when generating lessons
             */
            skipDates?:
              | {
                  date?: string | null;
                  id?: string | null;
                }[]
              | null;
            id?: string | null;
          }[]
        | null;
    };
  };
  /**
   * Configure how lessons are generated from this schedule
   */
  generateOptions?: {
    /**
     * Clear existing lessons within the specified date range before generating new ones
     */
    clearExisting?: boolean | null;
  };
  /**
   * Results from the last lesson generation
   */
  generationResults?: {
    lastGenerated?: string | null;
    created?: number | null;
    skipped?: number | null;
    conflicts?: number | null;
    details?:
      | {
          [k: string]: unknown;
        }
      | unknown[]
      | string
      | number
      | boolean
      | null;
  };
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "navbar_select".
 */
export interface NavbarSelect<T extends boolean = true> {
  logo?: T;
  navigationItems?:
    | T
    | {
        label?: T;
        link?: T;
        isExternal?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "footer_select".
 */
export interface FooterSelect<T extends boolean = true> {
  logo?: T;
  navigationItems?:
    | T
    | {
        label?: T;
        link?: T;
        isExternal?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "scheduler_select".
 */
export interface SchedulerSelect<T extends boolean = true> {
  startDate?: T;
  endDate?: T;
  lockOutTime?: T;
  defaultClassOption?: T;
  schedule?:
    | T
    | {
        monday?:
          | T
          | {
              isActive?: T;
              slots?:
                | T
                | {
                    startTime?: T;
                    endTime?: T;
                    classOption?: T;
                    location?: T;
                    instructor?: T;
                    lockOutTime?: T;
                    notes?: T;
                    skipDates?:
                      | T
                      | {
                          date?: T;
                          id?: T;
                        };
                    id?: T;
                  };
            };
        tuesday?:
          | T
          | {
              isActive?: T;
              slots?:
                | T
                | {
                    startTime?: T;
                    endTime?: T;
                    classOption?: T;
                    location?: T;
                    instructor?: T;
                    lockOutTime?: T;
                    notes?: T;
                    skipDates?:
                      | T
                      | {
                          date?: T;
                          id?: T;
                        };
                    id?: T;
                  };
            };
        wednesday?:
          | T
          | {
              isActive?: T;
              slots?:
                | T
                | {
                    startTime?: T;
                    endTime?: T;
                    classOption?: T;
                    location?: T;
                    instructor?: T;
                    lockOutTime?: T;
                    notes?: T;
                    skipDates?:
                      | T
                      | {
                          date?: T;
                          id?: T;
                        };
                    id?: T;
                  };
            };
        thursday?:
          | T
          | {
              isActive?: T;
              slots?:
                | T
                | {
                    startTime?: T;
                    endTime?: T;
                    classOption?: T;
                    location?: T;
                    instructor?: T;
                    lockOutTime?: T;
                    notes?: T;
                    skipDates?:
                      | T
                      | {
                          date?: T;
                          id?: T;
                        };
                    id?: T;
                  };
            };
        friday?:
          | T
          | {
              isActive?: T;
              slots?:
                | T
                | {
                    startTime?: T;
                    endTime?: T;
                    classOption?: T;
                    location?: T;
                    instructor?: T;
                    lockOutTime?: T;
                    notes?: T;
                    skipDates?:
                      | T
                      | {
                          date?: T;
                          id?: T;
                        };
                    id?: T;
                  };
            };
        saturday?:
          | T
          | {
              isActive?: T;
              slots?:
                | T
                | {
                    startTime?: T;
                    endTime?: T;
                    classOption?: T;
                    location?: T;
                    instructor?: T;
                    lockOutTime?: T;
                    notes?: T;
                    skipDates?:
                      | T
                      | {
                          date?: T;
                          id?: T;
                        };
                    id?: T;
                  };
            };
        sunday?:
          | T
          | {
              isActive?: T;
              slots?:
                | T
                | {
                    startTime?: T;
                    endTime?: T;
                    classOption?: T;
                    location?: T;
                    instructor?: T;
                    lockOutTime?: T;
                    notes?: T;
                    skipDates?:
                      | T
                      | {
                          date?: T;
                          id?: T;
                        };
                    id?: T;
                  };
            };
      };
  generateOptions?:
    | T
    | {
        clearExisting?: T;
      };
  generationResults?:
    | T
    | {
        lastGenerated?: T;
        created?: T;
        skipped?: T;
        conflicts?: T;
        details?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}